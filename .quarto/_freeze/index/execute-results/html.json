{
  "hash": "c9b00221ab27ac876d49c7d5481f1a4e",
  "result": {
    "markdown": "---\ntitle: \"NPL with Python\"\nauthor: \"Mario Camacho\"\ndate: \"xx-xx-2024\"\ndate-modified: last-modified\ndate-format: \"DD MMMM YYYY\"\nlang: es\n\nexecute:\n    enabled: true\n---\n\n**Librerías**\n\n::: {.cell execution_count=1}\n``` {.python .cell-code code-fold=\"false\"}\nimport pandas as pd\n# Import text from url\nimport requests\nimport re\n# Colores\nfrom termcolor import colored # Solo funciona dentro del notebook\nfrom rich.console import Console # Este paquete logra reflejarlo en el HTML\nconsole = Console(record=True)\n# NPL en general\nimport spacy\n# Tokenizacion\nimport nltk\nfrom nltk.tokenize import word_tokenize\n# Stop Words\nfrom nltk.corpus import stopwords\n# Steamming and Lemmatization\nimport nltk\nfrom nltk.stem.snowball import SnowballStemmer\n# ENT\nfrom spacy import displacy\n```\n:::\n\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\n%run  \"src\\counter_to_html.py\"\n```\n:::\n\n\n# Preproceso\n\n## Ingesta del documento\n\nLeemos el libro El Quijote.\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\n# Enviar una solicitud GET a la URL\nresponse = requests.get(\"https://www.gutenberg.org/cache/epub/2000/pg2000.txt\")\n\n# Verificar si la solicitud fue exitosa\nif response.status_code == 200:\n    quijote = response.text\n    # print(\"Éxito al leer el texto.\")\nelse:\n    print(\"Error al leer el texto.\")\n\n```\n:::\n\n\nNos ocupamos únicamente de los primeros seis capítulos de la primera parte de El Quijote.\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\n### Inicio del primer capítulo\n\n# Palabra objetivo\npalabra_start = \"Primera parte del ingenioso hidalgo don Quijote de la Mancha\"\n\n# Expresión regular para capturar todo lo que va antes de un patrón de  búsqueda\npatron = re.compile(rf\"{palabra_start}\\s*(.*)\", re.DOTALL)\n\ncoincidencia = patron.search(quijote)\n\nif coincidencia:\n    quijote = coincidencia.group(1) # 0 incluye la palabra del search, 1 no lo incluye\n    console.print(\"[bold]Inicio del primer capítulo:\\n\\n[/bold]\", quijote[:251])\n    # print(\"Inicio del texto:\\n\\n\", quijote[:251])\nelse:\n    console.print(\"[bold]Inicio del texto:\\n\\n[/bold]\", quijote[:251])\n    \n\n### Inicio del sépimo capítulo (y final del sexto)\npalabra_end = \"Capítulo VII\"\n\n# patron = re.compile(rf\"(.*)\\b{re.escape(palabra_end)}\\b\", re.DOTALL) # .* es codicioso (\"greedy\"): captura la mayor cantidad posible de caracteres antes de la coincidir con la palabra, captura hasta la última aparición de la palabra buscada\npatron = re.compile(rf\"(.*?)\\b{re.escape(palabra_end)}\\b\", re.DOTALL) # .* es no codicioso (\"lazy\"): captura la menor cantidad posible de caracteres y evitar que el resto del texto cooincida, se detiene en la primera coincidencia\n\ncoincidencia = patron.search(quijote)\n\nif coincidencia:\n    quijote = coincidencia.group(0)\n    console.print(\"[bold]Final del sexto capítulo:\\n\\n[/bold]\", quijote[-231:])\n    quijote = coincidencia.group(1) # Elimino el patrón de búsqueda\nelse:\n    console.print(\"[bold]Final del texto:\\n\\n[/bold]\", quijote[-231:])\n\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Inicio del primer capítulo:</span>\n\n Capítulo primero. Que trata de la condición y ejercicio del famoso hidalgo\ndon Quijote de la Mancha\n\nEn un lugar de la Mancha, de cuyo nombre no quiero acordarme, no ha mucho\ntiempo que vivía un hidalgo de los de lanza en astillero, adarga antigua\n</pre>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Final del sexto capítulo:</span>\n\n o el cura en oyendo el nombre— si tal libro hubiera\nmandado quemar; porque su autor fue uno de los famosos poetas del mundo, no\nsólo de España, y fue felicísimo en la tradución de algunas fábulas de\nOvidio.\n\n\n\n\nCapítulo VII\n</pre>\n```\n:::\n:::\n\n\n## Carga del modelo\n\nDescarga y carga del modelo de lenguaje a través de la librería spaCy\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\n# !python -m spacy download es_core_news_md\n```\n:::\n\n\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\nimport spacy\nnlp = spacy.load(\"es_core_news_md\")\n```\n:::\n\n\n## Fragmentación de la información\n\nPodemos dividir el texto en párrafos.\n\n::: {.cell layout-ncol='3' execution_count=8}\n``` {.python .cell-code}\nfor parrafo in list(nlp(quijote).sents)[:3]: # No es necesario pasarlo a una lista, solo para coger un número de ejemplos\n    console.print(\"[blue]\\nSiguiente párrafo:\\n\\n[/blue]\", parrafo)\n    #print(parrafo)\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n<span style=\"color: #000080; text-decoration-color: #000080\">Siguiente párrafo:</span>\n\n Capítulo primero.\n</pre>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n<span style=\"color: #000080; text-decoration-color: #000080\">Siguiente párrafo:</span>\n\n Que trata de la condición y ejercicio del famoso hidalgo\ndon Quijote de la Mancha\n\nEn un lugar de la Mancha, de cuyo nombre no quiero acordarme, no ha mucho\ntiempo que vivía un hidalgo de los de lanza en astillero, adarga antigua,\nrocín flaco y galgo corredor.\n</pre>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n<span style=\"color: #000080; text-decoration-color: #000080\">Siguiente párrafo:</span>\n\n Una olla de algo más vaca que carnero,\nsalpicón las más noches, duelos y quebrantos los sábados, lantejas los\nviernes, algún palomino de añadidura los domingos, consumían las tres\npartes de su hacienda.\n</pre>\n```\n:::\n:::\n\n\nY los párrafos en palabras.\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\nfor parrafo in list(nlp(quijote).sents)[:1]:\n    console.print(\"[blue]\\nSiguiente párrafo:\\n[/blue]\")\n    # print(colored(\"\\nSiguiente párrafo:\\n\",'blue'))\n    for palabra in parrafo:\n        print(palabra)\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">\n<span style=\"color: #000080; text-decoration-color: #000080\">Siguiente párrafo:</span>\n\n</pre>\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nCapítulo\nprimero\n.\n```\n:::\n:::\n\n\n# Pipeline NPL\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\ntext = quijote\n```\n:::\n\n\n## Tokenization\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\ntokens = word_tokenize(text)\nprint(tokens[:10])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n['Capítulo', 'primero', '.', 'Que', 'trata', 'de', 'la', 'condición', 'y', 'ejercicio']\n```\n:::\n:::\n\n\n## Stop Words\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\nstop_words = set(stopwords.words('spanish'))\ntokens = [w for w in tokens if w.lower() not in stop_words]\nprint(tokens[:10])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n['Capítulo', 'primero', '.', 'trata', 'condición', 'ejercicio', 'famoso', 'hidalgo', 'don', 'Quijote']\n```\n:::\n:::\n\n\n## Stemming and Lemmatization\n\nhttps://spacy.io/models/es  \nhttps://github.com/explosion/spacy-models/releases?q=es_core_web_md&expanded=true\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\nstemmer = SnowballStemmer(\"spanish\")\ntokens = [stemmer.stem(palabra) for palabra in tokens]\ntokens[:10]\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```\n['capitul',\n 'primer',\n '.',\n 'trat',\n 'condicion',\n 'ejercici',\n 'famos',\n 'hidalg',\n 'don',\n 'quijot']\n```\n:::\n:::\n\n\n## POS Tagging\n\nPart of speech.\n\nEtiqueta las palabras de un texto determinado según sus respectivos tipos de palabras, como sustantivos, adjetivos, adverbios y verbos.\n\n<https://spacy.io/usage>\n\nLa librería spaCy se basa en modelos de aprendizaje automático que se entrenaron con grandes cantidades de datos de texto etiquetados.\n\nLas etiquetas que spaCy utiliza se basan en el trabajo realizado por Universal Dependencies, un repositorio común que se puede utilizar para entrenar modelos como spaCy. La página de Dependencias universales tiene información sobre [los corpus disponibles para cada idioma]<https://universaldependencies.org/>.\n\nLas etiquetas que spaCy para un token podemos encontrarlas en <https://spacy.io/api/token#attributes>. Algunas de ellas son:\n\n::: {.cell execution_count=14}\n``` {.python .cell-code code-fold=\"false\"}\npropiedades = ['text', 'lang_', 'is_digit', 'is_lower', 'is_upper', 'is_sent_start', 'is_sent_end',\n               'like_email', 'like_url', # Espero no encontrar ninguna de estas etiquetas en El Quijote\n               'sentiment', 'sent']\n```\n:::\n\n\n::: {.cell collapse='true' execution_count=15}\n``` {.python .cell-code code-fold=\"false\"}\nejemplo_01 = nlp(text)[0]\n\nfor attr in propiedades:\n    print(\"obj.%s = %r\" % (attr, getattr(ejemplo_01, attr)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nobj.text = 'Capítulo'\nobj.lang_ = 'es'\nobj.is_digit = False\nobj.is_lower = False\nobj.is_upper = False\nobj.is_sent_start = True\nobj.is_sent_end = False\nobj.like_email = False\nobj.like_url = False\nobj.sentiment = 0.0\nobj.sent = Capítulo primero.\n```\n:::\n:::\n\n\n::: {.cell execution_count=16}\n``` {.python .cell-code}\nejemplo_02 = nlp(text)[:15]\n\n# Encabezado\nprint(f'{\"text\":<15} {\"lemma_\":<15} {\"pos_\":<15}{\"tag_\":<15}{\"dep_\":<15}{\"shape_\":<15}{\"is_alpha\":<15}{\"is_stop\":<15}')\nprint(\"=\"*15*8)\n\n# Loop que imprime los datos en formato de tabla\nfor token in ejemplo_02:\n    print(f'{token.text:<15} {token.lemma_:<15} {token.pos_:<15} {token.tag_:<15} {token.dep_:<15} {token.shape_:<15} {token.is_alpha:<15} {token.is_stop:<15}')\n\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntext            lemma_          pos_           tag_           dep_           shape_         is_alpha       is_stop        \n========================================================================================================================\nCapítulo        Capítulo        PROPN           PROPN           ROOT            Xxxxx           1               0              \nprimero         primero         ADJ             ADJ             amod            xxxx            1               1              \n.               .               PUNCT           PUNCT           punct           .               0               0              \nQue             que             SCONJ           SCONJ           mark            Xxx             1               1              \ntrata           tratar          VERB            VERB            ROOT            xxxx            1               1              \nde              de              ADP             ADP             case            xx              1               1              \nla              el              DET             DET             det             xx              1               1              \ncondición       condición       NOUN            NOUN            obj             xxxx            1               0              \ny               y               CCONJ           CCONJ           cc              x               1               1              \nejercicio       ejercicio       NOUN            NOUN            conj            xxxx            1               0              \ndel             del             ADP             ADP             case            xxx             1               1              \nfamoso          famoso          ADJ             ADJ             amod            xxxx            1               0              \nhidalgo         hidalgo         NOUN            NOUN            nmod            xxxx            1               0              \n\r\n              \r\n              SPACE           SPACE           dep             \r\n              0               0              \ndon             don             NOUN            NOUN            appos           xxx             1               0              \n```\n:::\n:::\n\n\n## Selección de nombres\n\n::: {.cell execution_count=17}\n``` {.python .cell-code}\nnouns = []\nfor token in nlp(text).ents:\n    if token.label_  == 'PER':\n        nouns.append(token.lemma_)\n\nnouns_tally = Counter(nouns)\n\ndf = pd.DataFrame(nouns_tally.most_common(), columns=['noun', 'count'])\ndf[:100]\n```\n\n::: {.cell-output .cell-output-display execution_count=17}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>noun</th>\n      <th>count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Andrés</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Nicolás</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>señor caballero</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Amadís de Gaula</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Amadís</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>95</th>\n      <td>Ténganse</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>96</th>\n      <td>Capítulo VI</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>97</th>\n      <td>Tomad</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>98</th>\n      <td>hízolo</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>99</th>\n      <td>Amadís de Grecia</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>100 rows × 2 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {.cell execution_count=18}\n``` {.python .cell-code}\nnouns = []\nfor token in nlp(text):\n    if token.pos_ == 'NOUN':\n        nouns.append(token.lemma_)\n\nnouns_tally = Counter(nouns)\n\ndf = pd.DataFrame(nouns_tally.most_common(), columns=['noun', 'count'])\ndf[:100]\n```\n\n::: {.cell-output .cell-output-display execution_count=18}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>noun</th>\n      <th>count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>caballero</td>\n      <td>61</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>don</td>\n      <td>56</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>libro</td>\n      <td>48</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>señor</td>\n      <td>38</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>cura</td>\n      <td>33</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>95</th>\n      <td>hombre</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>96</th>\n      <td>batalla</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>97</th>\n      <td>gigante</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>98</th>\n      <td>valor</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>99</th>\n      <td>moza</td>\n      <td>5</td>\n    </tr>\n  </tbody>\n</table>\n<p>100 rows × 2 columns</p>\n</div>\n```\n:::\n:::\n\n\n### Visualizer (entity recognizer)\n\nVisualizando el reconocedor de entidades. <https://spacy.io/usage/visualizers#ent>\n\nUsamos dos modelos distintos.\n\n::: {.cell execution_count=19}\n``` {.python .cell-code}\ntext = \"María se fue en 2020 al río Guadiana a pescar peces coloridos mientras Mario iban a por bebida al supermercado Mercado\"\n\ncolors = {\"PER\": \"linear-gradient(90deg, #aa9cfc, #fc9ce7)\",\n          \"LOC\": \"linear-gradient(90deg, orange, lightblue)\"}\noptions = {#\"ents\": [\"PER\"], # si quisiéramos especificar las entidades que queremos mostrar\n           \"colors\": colors}\n\ndoc = nlp(text)\n#displacy.server(doc, style=\"ent\", options=options, auto_select_port=True)\ndisplacy.render(doc, style=\"ent\", options=options)\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<span class=\"tex2jax_ignore\"><div class=\"entities\" style=\"line-height: 2.5; direction: ltr\">\n<mark class=\"entity\" style=\"background: linear-gradient(90deg, #aa9cfc, #fc9ce7); padding: 0.45em 0.6em; margin: 0 0.25em; line-height: 1; border-radius: 0.35em;\">\n    María\n    <span style=\"font-size: 0.8em; font-weight: bold; line-height: 1; border-radius: 0.35em; vertical-align: middle; margin-left: 0.5rem\">PER</span>\n</mark>\n se fue en 2020 al río \n<mark class=\"entity\" style=\"background: linear-gradient(90deg, orange, lightblue); padding: 0.45em 0.6em; margin: 0 0.25em; line-height: 1; border-radius: 0.35em;\">\n    Guadiana\n    <span style=\"font-size: 0.8em; font-weight: bold; line-height: 1; border-radius: 0.35em; vertical-align: middle; margin-left: 0.5rem\">LOC</span>\n</mark>\n a pescar peces coloridos mientras \n<mark class=\"entity\" style=\"background: linear-gradient(90deg, #aa9cfc, #fc9ce7); padding: 0.45em 0.6em; margin: 0 0.25em; line-height: 1; border-radius: 0.35em;\">\n    Mario\n    <span style=\"font-size: 0.8em; font-weight: bold; line-height: 1; border-radius: 0.35em; vertical-align: middle; margin-left: 0.5rem\">PER</span>\n</mark>\n iban a por bebida al supermercado \n<mark class=\"entity\" style=\"background: linear-gradient(90deg, orange, lightblue); padding: 0.45em 0.6em; margin: 0 0.25em; line-height: 1; border-radius: 0.35em;\">\n    Mercado\n    <span style=\"font-size: 0.8em; font-weight: bold; line-height: 1; border-radius: 0.35em; vertical-align: middle; margin-left: 0.5rem\">LOC</span>\n</mark>\n</div></span>\n```\n:::\n:::\n\n\n::: {.cell execution_count=20}\n``` {.python .cell-code}\ntext = \"María se fue en 2020 al río Guadiana a pescar peces coloridos mientras Mario iban a por bebida al supermercado Mercado\"\n\nnlp_en = spacy.load(\"en_core_web_sm\")\ndoc = nlp_en(text)\ndisplacy.render(doc, style=\"ent\", options=options)\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<span class=\"tex2jax_ignore\"><div class=\"entities\" style=\"line-height: 2.5; direction: ltr\">\n<mark class=\"entity\" style=\"background: #aa9cfc; padding: 0.45em 0.6em; margin: 0 0.25em; line-height: 1; border-radius: 0.35em;\">\n    María se fue\n    <span style=\"font-size: 0.8em; font-weight: bold; line-height: 1; border-radius: 0.35em; vertical-align: middle; margin-left: 0.5rem\">PERSON</span>\n</mark>\n en \n<mark class=\"entity\" style=\"background: #bfe1d9; padding: 0.45em 0.6em; margin: 0 0.25em; line-height: 1; border-radius: 0.35em;\">\n    2020\n    <span style=\"font-size: 0.8em; font-weight: bold; line-height: 1; border-radius: 0.35em; vertical-align: middle; margin-left: 0.5rem\">DATE</span>\n</mark>\n \n<mark class=\"entity\" style=\"background: #aa9cfc; padding: 0.45em 0.6em; margin: 0 0.25em; line-height: 1; border-radius: 0.35em;\">\n    al río Guadiana\n    <span style=\"font-size: 0.8em; font-weight: bold; line-height: 1; border-radius: 0.35em; vertical-align: middle; margin-left: 0.5rem\">PERSON</span>\n</mark>\n a pescar peces coloridos mientras \n<mark class=\"entity\" style=\"background: #aa9cfc; padding: 0.45em 0.6em; margin: 0 0.25em; line-height: 1; border-radius: 0.35em;\">\n    Mario\n    <span style=\"font-size: 0.8em; font-weight: bold; line-height: 1; border-radius: 0.35em; vertical-align: middle; margin-left: 0.5rem\">PERSON</span>\n</mark>\n iban a por bebida \n<mark class=\"entity\" style=\"background: #aa9cfc; padding: 0.45em 0.6em; margin: 0 0.25em; line-height: 1; border-radius: 0.35em;\">\n    al supermercado\n    <span style=\"font-size: 0.8em; font-weight: bold; line-height: 1; border-radius: 0.35em; vertical-align: middle; margin-left: 0.5rem\">PERSON</span>\n</mark>\n \n<mark class=\"entity\" style=\"background: #feca74; padding: 0.45em 0.6em; margin: 0 0.25em; line-height: 1; border-radius: 0.35em;\">\n    Mercado\n    <span style=\"font-size: 0.8em; font-weight: bold; line-height: 1; border-radius: 0.35em; vertical-align: middle; margin-left: 0.5rem\">GPE</span>\n</mark>\n</div></span>\n```\n:::\n:::\n\n\n::: {.cell execution_count=21}\n``` {.python .cell-code}\nimport spacy\nfrom spacy import displacy\n\ntext = \"Cuando Mario Camacho empezó a trabajar en coches autónomos en Google en 2020, poca gente de fuera de la compañía lo tomó en serio\"\n\ndoc = nlp(text)\ndisplacy.render(doc)\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<span class=\"tex2jax_ignore\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xml:lang=\"es\" id=\"a49f8efdab054a22907812693c77d8ea-0\" class=\"displacy\" width=\"4250\" height=\"574.5\" direction=\"ltr\" style=\"max-width: none; height: 574.5px; color: #000000; background: #ffffff; font-family: Arial; direction: ltr\">\n<text class=\"displacy-token\" fill=\"currentColor\" text-anchor=\"middle\" y=\"484.5\">\n    <tspan class=\"displacy-word\" fill=\"currentColor\" x=\"50\">Cuando</tspan>\n    <tspan class=\"displacy-tag\" dy=\"2em\" fill=\"currentColor\" x=\"50\">SCONJ</tspan>\n</text>\n\n<text class=\"displacy-token\" fill=\"currentColor\" text-anchor=\"middle\" y=\"484.5\">\n    <tspan class=\"displacy-word\" fill=\"currentColor\" x=\"225\">Mario</tspan>\n    <tspan class=\"displacy-tag\" dy=\"2em\" fill=\"currentColor\" x=\"225\">PROPN</tspan>\n</text>\n\n<text class=\"displacy-token\" fill=\"currentColor\" text-anchor=\"middle\" y=\"484.5\">\n    <tspan class=\"displacy-word\" fill=\"currentColor\" x=\"400\">Camacho</tspan>\n    <tspan class=\"displacy-tag\" dy=\"2em\" fill=\"currentColor\" x=\"400\">PROPN</tspan>\n</text>\n\n<text class=\"displacy-token\" fill=\"currentColor\" text-anchor=\"middle\" y=\"484.5\">\n    <tspan class=\"displacy-word\" fill=\"currentColor\" x=\"575\">empezó</tspan>\n    <tspan class=\"displacy-tag\" dy=\"2em\" fill=\"currentColor\" x=\"575\">VERB</tspan>\n</text>\n\n<text class=\"displacy-token\" fill=\"currentColor\" text-anchor=\"middle\" y=\"484.5\">\n    <tspan class=\"displacy-word\" fill=\"currentColor\" x=\"750\">a</tspan>\n    <tspan class=\"displacy-tag\" dy=\"2em\" fill=\"currentColor\" x=\"750\">ADP</tspan>\n</text>\n\n<text class=\"displacy-token\" fill=\"currentColor\" text-anchor=\"middle\" y=\"484.5\">\n    <tspan class=\"displacy-word\" fill=\"currentColor\" x=\"925\">trabajar</tspan>\n    <tspan class=\"displacy-tag\" dy=\"2em\" fill=\"currentColor\" x=\"925\">VERB</tspan>\n</text>\n\n<text class=\"displacy-token\" fill=\"currentColor\" text-anchor=\"middle\" y=\"484.5\">\n    <tspan class=\"displacy-word\" fill=\"currentColor\" x=\"1100\">en</tspan>\n    <tspan class=\"displacy-tag\" dy=\"2em\" fill=\"currentColor\" x=\"1100\">ADP</tspan>\n</text>\n\n<text class=\"displacy-token\" fill=\"currentColor\" text-anchor=\"middle\" y=\"484.5\">\n    <tspan class=\"displacy-word\" fill=\"currentColor\" x=\"1275\">coches</tspan>\n    <tspan class=\"displacy-tag\" dy=\"2em\" fill=\"currentColor\" x=\"1275\">NOUN</tspan>\n</text>\n\n<text class=\"displacy-token\" fill=\"currentColor\" text-anchor=\"middle\" y=\"484.5\">\n    <tspan class=\"displacy-word\" fill=\"currentColor\" x=\"1450\">autónomos</tspan>\n    <tspan class=\"displacy-tag\" dy=\"2em\" fill=\"currentColor\" x=\"1450\">ADJ</tspan>\n</text>\n\n<text class=\"displacy-token\" fill=\"currentColor\" text-anchor=\"middle\" y=\"484.5\">\n    <tspan class=\"displacy-word\" fill=\"currentColor\" x=\"1625\">en</tspan>\n    <tspan class=\"displacy-tag\" dy=\"2em\" fill=\"currentColor\" x=\"1625\">ADP</tspan>\n</text>\n\n<text class=\"displacy-token\" fill=\"currentColor\" text-anchor=\"middle\" y=\"484.5\">\n    <tspan class=\"displacy-word\" fill=\"currentColor\" x=\"1800\">Google</tspan>\n    <tspan class=\"displacy-tag\" dy=\"2em\" fill=\"currentColor\" x=\"1800\">PROPN</tspan>\n</text>\n\n<text class=\"displacy-token\" fill=\"currentColor\" text-anchor=\"middle\" y=\"484.5\">\n    <tspan class=\"displacy-word\" fill=\"currentColor\" x=\"1975\">en</tspan>\n    <tspan class=\"displacy-tag\" dy=\"2em\" fill=\"currentColor\" x=\"1975\">ADP</tspan>\n</text>\n\n<text class=\"displacy-token\" fill=\"currentColor\" text-anchor=\"middle\" y=\"484.5\">\n    <tspan class=\"displacy-word\" fill=\"currentColor\" x=\"2150\">2020,</tspan>\n    <tspan class=\"displacy-tag\" dy=\"2em\" fill=\"currentColor\" x=\"2150\">NOUN</tspan>\n</text>\n\n<text class=\"displacy-token\" fill=\"currentColor\" text-anchor=\"middle\" y=\"484.5\">\n    <tspan class=\"displacy-word\" fill=\"currentColor\" x=\"2325\">poca</tspan>\n    <tspan class=\"displacy-tag\" dy=\"2em\" fill=\"currentColor\" x=\"2325\">DET</tspan>\n</text>\n\n<text class=\"displacy-token\" fill=\"currentColor\" text-anchor=\"middle\" y=\"484.5\">\n    <tspan class=\"displacy-word\" fill=\"currentColor\" x=\"2500\">gente</tspan>\n    <tspan class=\"displacy-tag\" dy=\"2em\" fill=\"currentColor\" x=\"2500\">NOUN</tspan>\n</text>\n\n<text class=\"displacy-token\" fill=\"currentColor\" text-anchor=\"middle\" y=\"484.5\">\n    <tspan class=\"displacy-word\" fill=\"currentColor\" x=\"2675\">de</tspan>\n    <tspan class=\"displacy-tag\" dy=\"2em\" fill=\"currentColor\" x=\"2675\">ADP</tspan>\n</text>\n\n<text class=\"displacy-token\" fill=\"currentColor\" text-anchor=\"middle\" y=\"484.5\">\n    <tspan class=\"displacy-word\" fill=\"currentColor\" x=\"2850\">fuera</tspan>\n    <tspan class=\"displacy-tag\" dy=\"2em\" fill=\"currentColor\" x=\"2850\">ADV</tspan>\n</text>\n\n<text class=\"displacy-token\" fill=\"currentColor\" text-anchor=\"middle\" y=\"484.5\">\n    <tspan class=\"displacy-word\" fill=\"currentColor\" x=\"3025\">de</tspan>\n    <tspan class=\"displacy-tag\" dy=\"2em\" fill=\"currentColor\" x=\"3025\">ADP</tspan>\n</text>\n\n<text class=\"displacy-token\" fill=\"currentColor\" text-anchor=\"middle\" y=\"484.5\">\n    <tspan class=\"displacy-word\" fill=\"currentColor\" x=\"3200\">la</tspan>\n    <tspan class=\"displacy-tag\" dy=\"2em\" fill=\"currentColor\" x=\"3200\">DET</tspan>\n</text>\n\n<text class=\"displacy-token\" fill=\"currentColor\" text-anchor=\"middle\" y=\"484.5\">\n    <tspan class=\"displacy-word\" fill=\"currentColor\" x=\"3375\">compañía</tspan>\n    <tspan class=\"displacy-tag\" dy=\"2em\" fill=\"currentColor\" x=\"3375\">NOUN</tspan>\n</text>\n\n<text class=\"displacy-token\" fill=\"currentColor\" text-anchor=\"middle\" y=\"484.5\">\n    <tspan class=\"displacy-word\" fill=\"currentColor\" x=\"3550\">lo</tspan>\n    <tspan class=\"displacy-tag\" dy=\"2em\" fill=\"currentColor\" x=\"3550\">PRON</tspan>\n</text>\n\n<text class=\"displacy-token\" fill=\"currentColor\" text-anchor=\"middle\" y=\"484.5\">\n    <tspan class=\"displacy-word\" fill=\"currentColor\" x=\"3725\">tomó</tspan>\n    <tspan class=\"displacy-tag\" dy=\"2em\" fill=\"currentColor\" x=\"3725\">VERB</tspan>\n</text>\n\n<text class=\"displacy-token\" fill=\"currentColor\" text-anchor=\"middle\" y=\"484.5\">\n    <tspan class=\"displacy-word\" fill=\"currentColor\" x=\"3900\">en</tspan>\n    <tspan class=\"displacy-tag\" dy=\"2em\" fill=\"currentColor\" x=\"3900\">ADP</tspan>\n</text>\n\n<text class=\"displacy-token\" fill=\"currentColor\" text-anchor=\"middle\" y=\"484.5\">\n    <tspan class=\"displacy-word\" fill=\"currentColor\" x=\"4075\">serio</tspan>\n    <tspan class=\"displacy-tag\" dy=\"2em\" fill=\"currentColor\" x=\"4075\">NOUN</tspan>\n</text>\n\n<g class=\"displacy-arrow\">\n    <path class=\"displacy-arc\" id=\"arrow-a49f8efdab054a22907812693c77d8ea-0-0\" stroke-width=\"2px\" d=\"M70,439.5 C70,177.0 565.0,177.0 565.0,439.5\" fill=\"none\" stroke=\"currentColor\"/>\n    <text dy=\"1.25em\" style=\"font-size: 0.8em; letter-spacing: 1px\">\n        <textPath xlink:href=\"#arrow-a49f8efdab054a22907812693c77d8ea-0-0\" class=\"displacy-label\" startOffset=\"50%\" side=\"left\" fill=\"currentColor\" text-anchor=\"middle\">mark</textPath>\n    </text>\n    <path class=\"displacy-arrowhead\" d=\"M70,441.5 L62,429.5 78,429.5\" fill=\"currentColor\"/>\n</g>\n\n<g class=\"displacy-arrow\">\n    <path class=\"displacy-arc\" id=\"arrow-a49f8efdab054a22907812693c77d8ea-0-1\" stroke-width=\"2px\" d=\"M245,439.5 C245,264.5 560.0,264.5 560.0,439.5\" fill=\"none\" stroke=\"currentColor\"/>\n    <text dy=\"1.25em\" style=\"font-size: 0.8em; letter-spacing: 1px\">\n        <textPath xlink:href=\"#arrow-a49f8efdab054a22907812693c77d8ea-0-1\" class=\"displacy-label\" startOffset=\"50%\" side=\"left\" fill=\"currentColor\" text-anchor=\"middle\">nsubj</textPath>\n    </text>\n    <path class=\"displacy-arrowhead\" d=\"M245,441.5 L237,429.5 253,429.5\" fill=\"currentColor\"/>\n</g>\n\n<g class=\"displacy-arrow\">\n    <path class=\"displacy-arc\" id=\"arrow-a49f8efdab054a22907812693c77d8ea-0-2\" stroke-width=\"2px\" d=\"M245,439.5 C245,352.0 380.0,352.0 380.0,439.5\" fill=\"none\" stroke=\"currentColor\"/>\n    <text dy=\"1.25em\" style=\"font-size: 0.8em; letter-spacing: 1px\">\n        <textPath xlink:href=\"#arrow-a49f8efdab054a22907812693c77d8ea-0-2\" class=\"displacy-label\" startOffset=\"50%\" side=\"left\" fill=\"currentColor\" text-anchor=\"middle\">flat</textPath>\n    </text>\n    <path class=\"displacy-arrowhead\" d=\"M380.0,441.5 L388.0,429.5 372.0,429.5\" fill=\"currentColor\"/>\n</g>\n\n<g class=\"displacy-arrow\">\n    <path class=\"displacy-arc\" id=\"arrow-a49f8efdab054a22907812693c77d8ea-0-3\" stroke-width=\"2px\" d=\"M595,439.5 C595,2.0 3725.0,2.0 3725.0,439.5\" fill=\"none\" stroke=\"currentColor\"/>\n    <text dy=\"1.25em\" style=\"font-size: 0.8em; letter-spacing: 1px\">\n        <textPath xlink:href=\"#arrow-a49f8efdab054a22907812693c77d8ea-0-3\" class=\"displacy-label\" startOffset=\"50%\" side=\"left\" fill=\"currentColor\" text-anchor=\"middle\">advcl</textPath>\n    </text>\n    <path class=\"displacy-arrowhead\" d=\"M595,441.5 L587,429.5 603,429.5\" fill=\"currentColor\"/>\n</g>\n\n<g class=\"displacy-arrow\">\n    <path class=\"displacy-arc\" id=\"arrow-a49f8efdab054a22907812693c77d8ea-0-4\" stroke-width=\"2px\" d=\"M770,439.5 C770,352.0 905.0,352.0 905.0,439.5\" fill=\"none\" stroke=\"currentColor\"/>\n    <text dy=\"1.25em\" style=\"font-size: 0.8em; letter-spacing: 1px\">\n        <textPath xlink:href=\"#arrow-a49f8efdab054a22907812693c77d8ea-0-4\" class=\"displacy-label\" startOffset=\"50%\" side=\"left\" fill=\"currentColor\" text-anchor=\"middle\">mark</textPath>\n    </text>\n    <path class=\"displacy-arrowhead\" d=\"M770,441.5 L762,429.5 778,429.5\" fill=\"currentColor\"/>\n</g>\n\n<g class=\"displacy-arrow\">\n    <path class=\"displacy-arc\" id=\"arrow-a49f8efdab054a22907812693c77d8ea-0-5\" stroke-width=\"2px\" d=\"M595,439.5 C595,264.5 910.0,264.5 910.0,439.5\" fill=\"none\" stroke=\"currentColor\"/>\n    <text dy=\"1.25em\" style=\"font-size: 0.8em; letter-spacing: 1px\">\n        <textPath xlink:href=\"#arrow-a49f8efdab054a22907812693c77d8ea-0-5\" class=\"displacy-label\" startOffset=\"50%\" side=\"left\" fill=\"currentColor\" text-anchor=\"middle\">xcomp</textPath>\n    </text>\n    <path class=\"displacy-arrowhead\" d=\"M910.0,441.5 L918.0,429.5 902.0,429.5\" fill=\"currentColor\"/>\n</g>\n\n<g class=\"displacy-arrow\">\n    <path class=\"displacy-arc\" id=\"arrow-a49f8efdab054a22907812693c77d8ea-0-6\" stroke-width=\"2px\" d=\"M1120,439.5 C1120,352.0 1255.0,352.0 1255.0,439.5\" fill=\"none\" stroke=\"currentColor\"/>\n    <text dy=\"1.25em\" style=\"font-size: 0.8em; letter-spacing: 1px\">\n        <textPath xlink:href=\"#arrow-a49f8efdab054a22907812693c77d8ea-0-6\" class=\"displacy-label\" startOffset=\"50%\" side=\"left\" fill=\"currentColor\" text-anchor=\"middle\">case</textPath>\n    </text>\n    <path class=\"displacy-arrowhead\" d=\"M1120,441.5 L1112,429.5 1128,429.5\" fill=\"currentColor\"/>\n</g>\n\n<g class=\"displacy-arrow\">\n    <path class=\"displacy-arc\" id=\"arrow-a49f8efdab054a22907812693c77d8ea-0-7\" stroke-width=\"2px\" d=\"M595,439.5 C595,177.0 1265.0,177.0 1265.0,439.5\" fill=\"none\" stroke=\"currentColor\"/>\n    <text dy=\"1.25em\" style=\"font-size: 0.8em; letter-spacing: 1px\">\n        <textPath xlink:href=\"#arrow-a49f8efdab054a22907812693c77d8ea-0-7\" class=\"displacy-label\" startOffset=\"50%\" side=\"left\" fill=\"currentColor\" text-anchor=\"middle\">obl</textPath>\n    </text>\n    <path class=\"displacy-arrowhead\" d=\"M1265.0,441.5 L1273.0,429.5 1257.0,429.5\" fill=\"currentColor\"/>\n</g>\n\n<g class=\"displacy-arrow\">\n    <path class=\"displacy-arc\" id=\"arrow-a49f8efdab054a22907812693c77d8ea-0-8\" stroke-width=\"2px\" d=\"M1295,439.5 C1295,352.0 1430.0,352.0 1430.0,439.5\" fill=\"none\" stroke=\"currentColor\"/>\n    <text dy=\"1.25em\" style=\"font-size: 0.8em; letter-spacing: 1px\">\n        <textPath xlink:href=\"#arrow-a49f8efdab054a22907812693c77d8ea-0-8\" class=\"displacy-label\" startOffset=\"50%\" side=\"left\" fill=\"currentColor\" text-anchor=\"middle\">amod</textPath>\n    </text>\n    <path class=\"displacy-arrowhead\" d=\"M1430.0,441.5 L1438.0,429.5 1422.0,429.5\" fill=\"currentColor\"/>\n</g>\n\n<g class=\"displacy-arrow\">\n    <path class=\"displacy-arc\" id=\"arrow-a49f8efdab054a22907812693c77d8ea-0-9\" stroke-width=\"2px\" d=\"M1645,439.5 C1645,352.0 1780.0,352.0 1780.0,439.5\" fill=\"none\" stroke=\"currentColor\"/>\n    <text dy=\"1.25em\" style=\"font-size: 0.8em; letter-spacing: 1px\">\n        <textPath xlink:href=\"#arrow-a49f8efdab054a22907812693c77d8ea-0-9\" class=\"displacy-label\" startOffset=\"50%\" side=\"left\" fill=\"currentColor\" text-anchor=\"middle\">case</textPath>\n    </text>\n    <path class=\"displacy-arrowhead\" d=\"M1645,441.5 L1637,429.5 1653,429.5\" fill=\"currentColor\"/>\n</g>\n\n<g class=\"displacy-arrow\">\n    <path class=\"displacy-arc\" id=\"arrow-a49f8efdab054a22907812693c77d8ea-0-10\" stroke-width=\"2px\" d=\"M1295,439.5 C1295,264.5 1785.0,264.5 1785.0,439.5\" fill=\"none\" stroke=\"currentColor\"/>\n    <text dy=\"1.25em\" style=\"font-size: 0.8em; letter-spacing: 1px\">\n        <textPath xlink:href=\"#arrow-a49f8efdab054a22907812693c77d8ea-0-10\" class=\"displacy-label\" startOffset=\"50%\" side=\"left\" fill=\"currentColor\" text-anchor=\"middle\">nmod</textPath>\n    </text>\n    <path class=\"displacy-arrowhead\" d=\"M1785.0,441.5 L1793.0,429.5 1777.0,429.5\" fill=\"currentColor\"/>\n</g>\n\n<g class=\"displacy-arrow\">\n    <path class=\"displacy-arc\" id=\"arrow-a49f8efdab054a22907812693c77d8ea-0-11\" stroke-width=\"2px\" d=\"M1995,439.5 C1995,352.0 2130.0,352.0 2130.0,439.5\" fill=\"none\" stroke=\"currentColor\"/>\n    <text dy=\"1.25em\" style=\"font-size: 0.8em; letter-spacing: 1px\">\n        <textPath xlink:href=\"#arrow-a49f8efdab054a22907812693c77d8ea-0-11\" class=\"displacy-label\" startOffset=\"50%\" side=\"left\" fill=\"currentColor\" text-anchor=\"middle\">case</textPath>\n    </text>\n    <path class=\"displacy-arrowhead\" d=\"M1995,441.5 L1987,429.5 2003,429.5\" fill=\"currentColor\"/>\n</g>\n\n<g class=\"displacy-arrow\">\n    <path class=\"displacy-arc\" id=\"arrow-a49f8efdab054a22907812693c77d8ea-0-12\" stroke-width=\"2px\" d=\"M595,439.5 C595,89.5 2145.0,89.5 2145.0,439.5\" fill=\"none\" stroke=\"currentColor\"/>\n    <text dy=\"1.25em\" style=\"font-size: 0.8em; letter-spacing: 1px\">\n        <textPath xlink:href=\"#arrow-a49f8efdab054a22907812693c77d8ea-0-12\" class=\"displacy-label\" startOffset=\"50%\" side=\"left\" fill=\"currentColor\" text-anchor=\"middle\">obl</textPath>\n    </text>\n    <path class=\"displacy-arrowhead\" d=\"M2145.0,441.5 L2153.0,429.5 2137.0,429.5\" fill=\"currentColor\"/>\n</g>\n\n<g class=\"displacy-arrow\">\n    <path class=\"displacy-arc\" id=\"arrow-a49f8efdab054a22907812693c77d8ea-0-13\" stroke-width=\"2px\" d=\"M2345,439.5 C2345,352.0 2480.0,352.0 2480.0,439.5\" fill=\"none\" stroke=\"currentColor\"/>\n    <text dy=\"1.25em\" style=\"font-size: 0.8em; letter-spacing: 1px\">\n        <textPath xlink:href=\"#arrow-a49f8efdab054a22907812693c77d8ea-0-13\" class=\"displacy-label\" startOffset=\"50%\" side=\"left\" fill=\"currentColor\" text-anchor=\"middle\">det</textPath>\n    </text>\n    <path class=\"displacy-arrowhead\" d=\"M2345,441.5 L2337,429.5 2353,429.5\" fill=\"currentColor\"/>\n</g>\n\n<g class=\"displacy-arrow\">\n    <path class=\"displacy-arc\" id=\"arrow-a49f8efdab054a22907812693c77d8ea-0-14\" stroke-width=\"2px\" d=\"M2520,439.5 C2520,89.5 3720.0,89.5 3720.0,439.5\" fill=\"none\" stroke=\"currentColor\"/>\n    <text dy=\"1.25em\" style=\"font-size: 0.8em; letter-spacing: 1px\">\n        <textPath xlink:href=\"#arrow-a49f8efdab054a22907812693c77d8ea-0-14\" class=\"displacy-label\" startOffset=\"50%\" side=\"left\" fill=\"currentColor\" text-anchor=\"middle\">iobj</textPath>\n    </text>\n    <path class=\"displacy-arrowhead\" d=\"M2520,441.5 L2512,429.5 2528,429.5\" fill=\"currentColor\"/>\n</g>\n\n<g class=\"displacy-arrow\">\n    <path class=\"displacy-arc\" id=\"arrow-a49f8efdab054a22907812693c77d8ea-0-15\" stroke-width=\"2px\" d=\"M2695,439.5 C2695,352.0 2830.0,352.0 2830.0,439.5\" fill=\"none\" stroke=\"currentColor\"/>\n    <text dy=\"1.25em\" style=\"font-size: 0.8em; letter-spacing: 1px\">\n        <textPath xlink:href=\"#arrow-a49f8efdab054a22907812693c77d8ea-0-15\" class=\"displacy-label\" startOffset=\"50%\" side=\"left\" fill=\"currentColor\" text-anchor=\"middle\">case</textPath>\n    </text>\n    <path class=\"displacy-arrowhead\" d=\"M2695,441.5 L2687,429.5 2703,429.5\" fill=\"currentColor\"/>\n</g>\n\n<g class=\"displacy-arrow\">\n    <path class=\"displacy-arc\" id=\"arrow-a49f8efdab054a22907812693c77d8ea-0-16\" stroke-width=\"2px\" d=\"M2520,439.5 C2520,264.5 2835.0,264.5 2835.0,439.5\" fill=\"none\" stroke=\"currentColor\"/>\n    <text dy=\"1.25em\" style=\"font-size: 0.8em; letter-spacing: 1px\">\n        <textPath xlink:href=\"#arrow-a49f8efdab054a22907812693c77d8ea-0-16\" class=\"displacy-label\" startOffset=\"50%\" side=\"left\" fill=\"currentColor\" text-anchor=\"middle\">advmod</textPath>\n    </text>\n    <path class=\"displacy-arrowhead\" d=\"M2835.0,441.5 L2843.0,429.5 2827.0,429.5\" fill=\"currentColor\"/>\n</g>\n\n<g class=\"displacy-arrow\">\n    <path class=\"displacy-arc\" id=\"arrow-a49f8efdab054a22907812693c77d8ea-0-17\" stroke-width=\"2px\" d=\"M3045,439.5 C3045,264.5 3360.0,264.5 3360.0,439.5\" fill=\"none\" stroke=\"currentColor\"/>\n    <text dy=\"1.25em\" style=\"font-size: 0.8em; letter-spacing: 1px\">\n        <textPath xlink:href=\"#arrow-a49f8efdab054a22907812693c77d8ea-0-17\" class=\"displacy-label\" startOffset=\"50%\" side=\"left\" fill=\"currentColor\" text-anchor=\"middle\">case</textPath>\n    </text>\n    <path class=\"displacy-arrowhead\" d=\"M3045,441.5 L3037,429.5 3053,429.5\" fill=\"currentColor\"/>\n</g>\n\n<g class=\"displacy-arrow\">\n    <path class=\"displacy-arc\" id=\"arrow-a49f8efdab054a22907812693c77d8ea-0-18\" stroke-width=\"2px\" d=\"M3220,439.5 C3220,352.0 3355.0,352.0 3355.0,439.5\" fill=\"none\" stroke=\"currentColor\"/>\n    <text dy=\"1.25em\" style=\"font-size: 0.8em; letter-spacing: 1px\">\n        <textPath xlink:href=\"#arrow-a49f8efdab054a22907812693c77d8ea-0-18\" class=\"displacy-label\" startOffset=\"50%\" side=\"left\" fill=\"currentColor\" text-anchor=\"middle\">det</textPath>\n    </text>\n    <path class=\"displacy-arrowhead\" d=\"M3220,441.5 L3212,429.5 3228,429.5\" fill=\"currentColor\"/>\n</g>\n\n<g class=\"displacy-arrow\">\n    <path class=\"displacy-arc\" id=\"arrow-a49f8efdab054a22907812693c77d8ea-0-19\" stroke-width=\"2px\" d=\"M2870,439.5 C2870,177.0 3365.0,177.0 3365.0,439.5\" fill=\"none\" stroke=\"currentColor\"/>\n    <text dy=\"1.25em\" style=\"font-size: 0.8em; letter-spacing: 1px\">\n        <textPath xlink:href=\"#arrow-a49f8efdab054a22907812693c77d8ea-0-19\" class=\"displacy-label\" startOffset=\"50%\" side=\"left\" fill=\"currentColor\" text-anchor=\"middle\">obl</textPath>\n    </text>\n    <path class=\"displacy-arrowhead\" d=\"M3365.0,441.5 L3373.0,429.5 3357.0,429.5\" fill=\"currentColor\"/>\n</g>\n\n<g class=\"displacy-arrow\">\n    <path class=\"displacy-arc\" id=\"arrow-a49f8efdab054a22907812693c77d8ea-0-20\" stroke-width=\"2px\" d=\"M3570,439.5 C3570,352.0 3705.0,352.0 3705.0,439.5\" fill=\"none\" stroke=\"currentColor\"/>\n    <text dy=\"1.25em\" style=\"font-size: 0.8em; letter-spacing: 1px\">\n        <textPath xlink:href=\"#arrow-a49f8efdab054a22907812693c77d8ea-0-20\" class=\"displacy-label\" startOffset=\"50%\" side=\"left\" fill=\"currentColor\" text-anchor=\"middle\">obj</textPath>\n    </text>\n    <path class=\"displacy-arrowhead\" d=\"M3570,441.5 L3562,429.5 3578,429.5\" fill=\"currentColor\"/>\n</g>\n\n<g class=\"displacy-arrow\">\n    <path class=\"displacy-arc\" id=\"arrow-a49f8efdab054a22907812693c77d8ea-0-21\" stroke-width=\"2px\" d=\"M3745,439.5 C3745,352.0 3880.0,352.0 3880.0,439.5\" fill=\"none\" stroke=\"currentColor\"/>\n    <text dy=\"1.25em\" style=\"font-size: 0.8em; letter-spacing: 1px\">\n        <textPath xlink:href=\"#arrow-a49f8efdab054a22907812693c77d8ea-0-21\" class=\"displacy-label\" startOffset=\"50%\" side=\"left\" fill=\"currentColor\" text-anchor=\"middle\">advmod</textPath>\n    </text>\n    <path class=\"displacy-arrowhead\" d=\"M3880.0,441.5 L3888.0,429.5 3872.0,429.5\" fill=\"currentColor\"/>\n</g>\n\n<g class=\"displacy-arrow\">\n    <path class=\"displacy-arc\" id=\"arrow-a49f8efdab054a22907812693c77d8ea-0-22\" stroke-width=\"2px\" d=\"M3920,439.5 C3920,352.0 4055.0,352.0 4055.0,439.5\" fill=\"none\" stroke=\"currentColor\"/>\n    <text dy=\"1.25em\" style=\"font-size: 0.8em; letter-spacing: 1px\">\n        <textPath xlink:href=\"#arrow-a49f8efdab054a22907812693c77d8ea-0-22\" class=\"displacy-label\" startOffset=\"50%\" side=\"left\" fill=\"currentColor\" text-anchor=\"middle\">fixed</textPath>\n    </text>\n    <path class=\"displacy-arrowhead\" d=\"M4055.0,441.5 L4063.0,429.5 4047.0,429.5\" fill=\"currentColor\"/>\n</g>\n</svg></span>\n```\n:::\n:::\n\n\n::: {.cell execution_count=22}\n``` {.python .cell-code}\na=nlp(text).ents[0]\n```\n:::\n\n\n::: {.cell execution_count=23}\n``` {.python .cell-code}\nfor attr in dir(a):\n    if attr != 'doc' and attr != 'sent' and attr == 'label_':\n        print(\"obj.%s = %r\" % (attr, getattr(a, attr)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nobj.label_ = 'PER'\n```\n:::\n:::\n\n\n::: {.cell execution_count=24}\n``` {.python .cell-code}\n#for named_entity in nlp(text).ents:\n#    print(named_entity, named_entity.label_)\n```\n:::\n\n\n::: {.cell execution_count=25}\n``` {.python .cell-code}\n#import spacy\n\n#nlp = spacy.load(\"es_core_news_md\")\ndoc = nlp(text)[:10]\nfor token in doc:\n    print(token.text, token.pos_, token.tag_ )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCuando SCONJ SCONJ\nMario PROPN PROPN\nCamacho PROPN PROPN\nempezó VERB VERB\na ADP ADP\ntrabajar VERB VERB\nen ADP ADP\ncoches NOUN NOUN\nautónomos ADJ ADJ\nen ADP ADP\n```\n:::\n:::\n\n\n## NER\n\nNamed-Entity Recognition.\n\nRealizamos esta subtarea de NPL mediante la librería spaCy.\n\n::: {.cell execution_count=26}\n``` {.python .cell-code code-fold=\"false\"}\ndocumento = nlp(text)\n```\n:::\n\n\nTodas las entidades nombradas se encuentran en la propiedad **document.ents**.\n\n::: {.cell execution_count=27}\n``` {.python .cell-code}\nfor named_entity in list(documento.ents)[:10]:\n    print(named_entity, named_entity.label_)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMario Camacho PER\nGoogle ORG\n```\n:::\n:::\n\n\n::: {.cell execution_count=28}\n``` {.python .cell-code}\nimport pandas as pd\nfrom collections import Counter\npeople = []\n\nfor named_entity in documento.ents:\n    if named_entity.label_ == \"PER\":\n        people.append(named_entity.text)\n\npeople_tally = Counter(people)\n\ndf = pd.DataFrame(people_tally.most_common(), columns=['character', 'count'])\nprint(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       character  count\n0  Mario Camacho      1\n```\n:::\n:::\n\n\n::: {.cell execution_count=29}\n``` {.python .cell-code}\n# Convertir el Counter a una tabla HTML\nhtml_table = counter_to_html_table(people_tally)\n\n# Mostrar la tabla HTML\ndisplay(HTML(html_table))\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n    <style>\n        table {\n            width: 50%;\n            margin: 20px auto;\n            border-collapse: collapse;\n            box-shadow: 0 5px 10px rgba(0,0,0,0.1);\n        }\n        table, th, td {\n            border: 1px solid #ddd;\n            padding: 10px;\n            text-align: left;\n        }\n        th {\n            background-color: #f4f4f4;\n        }\n        tr:hover {\n            background-color: #f1f1f1;\n        }\n        #filterInput {\n            width: 50%;\n            margin: 20px auto;\n            padding: 10px;\n            border: 1px solid #ddd;\n            font-size: 16px;\n        }\n        .show-more-btn {\n            width: 50%;\n            margin: 10px auto;\n            text-align: center;\n            cursor: pointer;\n            color: #007bff;\n            text-decoration: underline;\n        }\n    </style>\n    \n    <input type=\"text\" id=\"filterInput\" onkeyup=\"filterTable()\" placeholder=\"Buscar por elemento...\">\n    \n    <table id=\"counterTable\">\n        <thead>\n            <tr>\n                <th>Elemento</th>\n                <th>Conteo</th>\n            </tr>\n        </thead>\n        <tbody>\n    <tr style=\"\" class=\"table-row\"><td>Mario Camacho</td><td>1</td></tr>\n        </tbody>\n    </table>\n    \n    <div id=\"showMoreBtn\" class=\"show-more-btn\" onclick=\"toggleRows()\">Mostrar más...</div>\n    \n    <script>\n    function filterTable() {{\n      var input, filter, table, tr, td, i, txtValue;\n      input = document.getElementById(\"filterInput\");\n      filter = input.value.toUpperCase();\n      table = document.getElementById(\"counterTable\");\n      tr = table.getElementsByTagName(\"tr\");\n      for (i = 1; i < tr.length; i++) {{\n        td = tr[i].getElementsByTagName(\"td\")[0];\n        if (td) {{\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toUpperCase().indexOf(filter) > -1) {{\n            tr[i].style.display = \"\";\n          }} else {{\n            tr[i].style.display = \"none\";\n          }}\n        }}       \n      }}\n    }}\n\n    function toggleRows() {{\n      var rows = document.getElementsByClassName(\"table-row\");\n      var showMoreBtn = document.getElementById(\"showMoreBtn\");\n      for (var i = 0; i < rows.length; i++) {{\n        if (rows[i].style.display === \"none\") {{\n          rows[i].style.display = \"\";\n          showMoreBtn.innerText = \"Mostrar menos...\";\n        }} else if (i >= {initial_visible}) {{\n          rows[i].style.display = \"none\";\n          showMoreBtn.innerText = \"Mostrar más...\";\n        }}\n      }}\n    }}\n    </script>\n    \n```\n:::\n:::\n\n\n\n\n**Etiquetas NER**\nLas entidades nombradas son frases que contienen los nombres de personas, organizaciones, ubicaciones, expresiones de tiempo, cantidades, entre otras. Las entidades de interés se almacenan con su etiqueta correspondiente (por ejemplo, ‘PER‘ para personas, ‘LOC‘ para lugares, ‘ORG’ para organizaciones y ‘MISC’ que se emplea como un comodín para las tres anteriores) y sus posiciones en el texto (cable aclarar que el modelo que se utiliza mediante spaCy ya tiene las etiquetas predefinidas).  \n\n::: {.cell execution_count=30}\n``` {.python .cell-code code-fold=\"false\"}\ngetattr(nlp.get_pipe('ner'), 'labels')\n```\n\n::: {.cell-output .cell-output-display execution_count=30}\n```\n('LOC', 'MISC', 'ORG', 'PER')\n```\n:::\n:::\n\n\n::: {.cell execution_count=31}\n``` {.python .cell-code}\nfrom IPython.display import Markdown, display\nimport re\n\ndef get_ner_in_context(keyword, document, desired_ner_labels= False):\n    \n    if desired_ner_labels != False:\n        desired_ner_labels = desired_ner_labels\n    else:\n         # all possible labels\n        desired_ner_labels = list(nlp.get_pipe('ner').labels)  \n        \n    #Iterate through all the sentences in the document and pull out the text of each sentence\n    for sentence in document.sents:\n        #process each sentence\n        sentence_doc = nlp(sentence.text)\n        for named_entity in sentence_doc.ents:\n            #Check to see if the keyword is in the sentence (and ignore capitalization by making both lowercase)\n            if keyword.lower() in named_entity.text.lower()  and named_entity.label_ in desired_ner_labels:\n                #Use the regex library to replace linebreaks and to make the keyword bolded, again ignoring capitalization\n            \n                sentence_text = re.sub('\\n', ' ', sentence.text)\n                sentence_text = re.sub(f\"{named_entity.text}\", f\"**{named_entity.text}**\", sentence_text, flags=re.IGNORECASE)\n\n                display(Markdown('--')) # Si pones --- te sale una línea de izq a drcha\n                display(Markdown(f\"**{named_entity.label_}**\"))\n                display(Markdown(sentence_text))\n```\n:::\n\n\n::: {.cell execution_count=32}\n``` {.python .cell-code}\ntype(doc)\n```\n\n::: {.cell-output .cell-output-display execution_count=32}\n```\nspacy.tokens.span.Span\n```\n:::\n:::\n\n\n::: {.cell execution_count=33}\n``` {.python .cell-code}\nget_ner_in_context('Sancho', nlp(text), desired_ner_labels = False)\n```\n:::\n\n\n::: {.cell execution_count=34}\n``` {.python .cell-code}\nimport spacy\nnlp = spacy.load(\"es_core_news_md\")\ndoc = nlp(\"Apple está pensando en comprar una startup de España por 5.000 €.\")\nfor ent in doc.ents:\n    print(ent.text, ent.label_)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nApple ORG\nEspaña ORG\n```\n:::\n:::\n\n\n::: {.cell execution_count=35}\n``` {.python .cell-code}\ndoc\n```\n\n::: {.cell-output .cell-output-display execution_count=35}\n```\nApple está pensando en comprar una startup de España por 5.000 €.\n```\n:::\n:::\n\n\n::: {.cell execution_count=36}\n``` {.python .cell-code}\nget_ner_in_context\n```\n\n::: {.cell-output .cell-output-display execution_count=36}\n```\n<function __main__.get_ner_in_context(keyword, document, desired_ner_labels=False)>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files\\figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}